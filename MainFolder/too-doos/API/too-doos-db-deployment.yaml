apiVersion: apps/v1
kind: Deployment
metadata:
  name: too-doos-db
  labels:
    io.kompose.service: too-doos-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: too-doos-db
  template:
    metadata:
      labels:
        io.kompose.service: too-doos-db
    spec:
      containers:
        - name: too-doos-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "too_doos"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          # Liveness probe: czy proces w kontenerze nadal działa?
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -d
                - too_doos
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 5
          # Readiness probe: czy baza już przyjmuje połączenia?
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
                - -d
                - too_doos
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
